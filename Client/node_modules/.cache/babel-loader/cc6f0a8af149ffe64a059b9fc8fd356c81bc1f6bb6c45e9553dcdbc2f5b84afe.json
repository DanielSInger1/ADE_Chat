{"ast":null,"code":"import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var handleFileInputChange=function handleFileInputChange(event,setPhoto,setPhotoError){var file=event.target.files[0];if(file){// Perform additional validation on the file if needed\nif(!isFileTypeValid(file)){setPhotoError(\"Only JPEG, PNG, and GIF files are allowed.\");event.target.value=\"\";return;}// File is valid, proceed with further processing or upload\nReadAndDisplayFile(file,setPhoto);setPhotoError(\"\");//         setPhoto(\"a\"); // Clear the file error if it was previously set\n}};export var ReadAndDisplayFile=function ReadAndDisplayFile(file,setPhoto){var reader=new FileReader();reader.addEventListener(\"load\",function(){setPhoto(reader.result);});reader.readAsDataURL(file);};var isFileTypeValid=function isFileTypeValid(file){var allowedTypes=[\"image/jpeg\",\"image/png\",\"image/gif\"];return allowedTypes.includes(file.type);};export function Photo(_ref){var photo=_ref.photo,setPhoto=_ref.setPhoto,photoError=_ref.photoError,setPhotoError=_ref.setPhotoError;return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex flex-row align-items-center mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-outline flex-fill mb-0\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"form-control \".concat(photoError?\"is-invalid\":\"\"),id:\"image-input\",accept:\"image/jpeg, image/png, image/gif\"//                           onChange={(e) => setName(e.target.value)}\n,onChange:function onChange(e){return handleFileInputChange(e,setPhoto,setPhotoError);},title:\"Only JPEG, PNG, and GIF files are allowed\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"image-input\",className:\"form-label\"}),photoError&&/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:photoError})]})});}","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","handleFileInputChange","event","setPhoto","setPhotoError","file","target","files","isFileTypeValid","value","ReadAndDisplayFile","reader","FileReader","addEventListener","result","readAsDataURL","allowedTypes","includes","type","Photo","_ref","photo","photoError","className","children","concat","id","accept","onChange","e","title","htmlFor"],"sources":["C:/Users/User/Downloads/chat FInal/Client/src/registeration/RegisterPhoto.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst handleFileInputChange = (event, setPhoto, setPhotoError) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (file) {\r\n        // Perform additional validation on the file if needed\r\n        if (!isFileTypeValid(file)) {\r\n            setPhotoError(\"Only JPEG, PNG, and GIF files are allowed.\");\r\n            event.target.value = \"\";\r\n            return;\r\n        }\r\n\r\n        // File is valid, proceed with further processing or upload\r\n        ReadAndDisplayFile(file, setPhoto);\r\n        setPhotoError(\"\");\r\n//         setPhoto(\"a\"); // Clear the file error if it was previously set\r\n    }\r\n};\r\n\r\n export const ReadAndDisplayFile = (file, setPhoto) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n        setPhoto(reader.result)\r\n    });\r\n    reader.readAsDataURL(file);\r\n};\r\n\r\n\r\n\r\n\r\nconst isFileTypeValid = (file) => {\r\n    const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n    return allowedTypes.includes(file.type);\r\n};\r\n\r\nexport function Photo({ photo, setPhoto, photoError, setPhotoError }) {\r\n    return (\r\n        <div className=\"d-flex flex-row align-items-center mb-4\">\r\n            <div className=\"form-outline flex-fill mb-0\">\r\n                <input\r\n                    type=\"file\"\r\n                    className={`form-control ${photoError ? \"is-invalid\" : \"\"}`}\r\n                    id=\"image-input\"\r\n                    accept=\"image/jpeg, image/png, image/gif\"\r\n//                           onChange={(e) => setName(e.target.value)}\r\n\r\n                    onChange={(e) => handleFileInputChange(e, setPhoto, setPhotoError)}\r\n                    title=\"Only JPEG, PNG, and GIF files are allowed\"\r\n                />\r\n                <label htmlFor=\"image-input\" className=\"form-label\"></label>\r\n                {photoError && <p className=\"text-danger\">{photoError}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,GAAM,CAAAC,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAAIC,KAAK,CAAEC,QAAQ,CAAEC,aAAa,CAAK,CAC9D,GAAM,CAAAC,IAAI,CAAGH,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAElC,GAAIF,IAAI,CAAE,CACN;AACA,GAAI,CAACG,eAAe,CAACH,IAAI,CAAC,CAAE,CACxBD,aAAa,CAAC,4CAA4C,CAAC,CAC3DF,KAAK,CAACI,MAAM,CAACG,KAAK,CAAG,EAAE,CACvB,OACJ,CAEA;AACAC,kBAAkB,CAACL,IAAI,CAAEF,QAAQ,CAAC,CAClCC,aAAa,CAAC,EAAE,CAAC,CACzB;AACI,CACJ,CAAC,CAEA,MAAO,IAAM,CAAAM,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAIL,IAAI,CAAEF,QAAQ,CAAK,CACnD,GAAM,CAAAQ,MAAM,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,CAC/BD,MAAM,CAACE,gBAAgB,CAAC,MAAM,CAAE,UAAM,CAClCV,QAAQ,CAACQ,MAAM,CAACG,MAAM,CAAC,CAC3B,CAAC,CAAC,CACFH,MAAM,CAACI,aAAa,CAACV,IAAI,CAAC,CAC9B,CAAC,CAKD,GAAM,CAAAG,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIH,IAAI,CAAK,CAC9B,GAAM,CAAAW,YAAY,CAAG,CAAC,YAAY,CAAE,WAAW,CAAE,WAAW,CAAC,CAC7D,MAAO,CAAAA,YAAY,CAACC,QAAQ,CAACZ,IAAI,CAACa,IAAI,CAAC,CAC3C,CAAC,CAED,MAAO,SAAS,CAAAC,KAAKA,CAAAC,IAAA,CAAiD,IAA9C,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAAElB,QAAQ,CAAAiB,IAAA,CAARjB,QAAQ,CAAEmB,UAAU,CAAAF,IAAA,CAAVE,UAAU,CAAElB,aAAa,CAAAgB,IAAA,CAAbhB,aAAa,CAC9D,mBACIN,IAAA,QAAKyB,SAAS,CAAC,yCAAyC,CAAAC,QAAA,cACpDxB,KAAA,QAAKuB,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eACxC1B,IAAA,UACIoB,IAAI,CAAC,MAAM,CACXK,SAAS,iBAAAE,MAAA,CAAkBH,UAAU,CAAG,YAAY,CAAG,EAAE,CAAG,CAC5DI,EAAE,CAAC,aAAa,CAChBC,MAAM,CAAC,kCAC3B;AAAA,CAEoBC,QAAQ,CAAE,SAAAA,SAACC,CAAC,QAAK,CAAA5B,qBAAqB,CAAC4B,CAAC,CAAE1B,QAAQ,CAAEC,aAAa,CAAC,EAAC,CACnE0B,KAAK,CAAC,2CAA2C,CACpD,CAAC,cACFhC,IAAA,UAAOiC,OAAO,CAAC,aAAa,CAACR,SAAS,CAAC,YAAY,CAAQ,CAAC,CAC3DD,UAAU,eAAIxB,IAAA,MAAGyB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEF,UAAU,CAAI,CAAC,EACzD,CAAC,CACL,CAAC,CAEd"},"metadata":{},"sourceType":"module","externalDependencies":[]}